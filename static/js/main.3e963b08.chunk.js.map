{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","onButtonClick","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","onSelect","onSearch","useState","selectedOption","setSelectedOption","inputValue","setInputValue","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","user","onCrossClick","isDataEmpty","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","setTodos","selectedUser","setSelectedUser","isTodosLoaded","setIsTodosLoaded","setSelectedTodo","isButtonClicked","setIsButtonClicked","query","setQuery","useEffect","visTodos","filterBySelect","useCallback","todosFromServer","option","filter","filterByQuery","inputQuery","normQuery","toLocaleLowerCase","includes","visibleTodos","useMemo","onInfoButtonClick","userId","onCrossButtonClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e963b08.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  onButtonClick: (todo: Todo) => void,\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onButtonClick,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed === true && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed === true,\n                'has-text-danger': todo.completed === false,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onButtonClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye-slash': selectedTodo === todo,\n                      'fa-eye': selectedTodo !== todo,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ninterface Props {\n  onSelect: (option: string) => void,\n  onSearch: (str: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({ onSelect, onSearch }) => {\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onSelect(event.target.value);\n    setSelectedOption(event.target.value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onSearch(event.target.value);\n    setInputValue(event.target.value);\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n    onSearch('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  user: User | null,\n  todo: Todo | null,\n  onCrossClick: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  onCrossClick,\n}) => {\n  const isDataEmpty = user === null;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isDataEmpty ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCrossClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isTodosLoaded, setIsTodosLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(visTodos => {\n      setTodos(visTodos);\n      setIsTodosLoaded(true);\n    });\n  }, []);\n\n  const filterBySelect = useCallback((todosFromServer: Todo[], option: string) => {\n    return todosFromServer.filter(todo => {\n      switch (option) {\n        case 'active':\n          return todo.completed === false;\n\n        case 'completed':\n          return todo.completed === true;\n\n        case 'all':\n        default:\n          return true;\n      }\n    });\n  }, []);\n\n  const filterByQuery = useCallback((visTodos: Todo[], inputQuery: string) => {\n    return visTodos.filter(todo => {\n      const normQuery = inputQuery.toLocaleLowerCase();\n\n      return todo.title.toLocaleLowerCase().includes(normQuery);\n    });\n  }, []);\n\n  let visibleTodos = useMemo(() => {\n    return filterBySelect(todos, selectedOption);\n  }, [todos, selectedOption]);\n\n  visibleTodos = useMemo(() => {\n    return filterByQuery(visibleTodos, query);\n  }, [visibleTodos, query]);\n\n  const onInfoButtonClick = useCallback((todo: Todo) => {\n    getUser(todo.userId).then(user => setSelectedUser(user));\n\n    setSelectedTodo(todo);\n    setIsButtonClicked(true);\n  }, []);\n\n  const onCrossButtonClick = useCallback(() => {\n    setSelectedUser(null);\n    setSelectedTodo(null);\n    setIsButtonClicked(false);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelect={setSelectedOption}\n                onSearch={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isTodosLoaded\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    onButtonClick={onInfoButtonClick}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isButtonClicked && (\n        <TodoModal\n          user={selectedUser}\n          todo={selectedTodo}\n          onCrossClick={onCrossButtonClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}